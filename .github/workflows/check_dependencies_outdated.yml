name: Check dependencies outdated

env:
  CACHE_VERSION_YARN: 1
  CACHE_VERSION_NODE_MODULES: 1
  CACHE_VERSION_PODS: 1

on:
  schedule:
    - cron: 0 0 * * 1
  workflow_dispatch:

jobs:
  check_outdated:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ env.CACHE_VERSION_YARN }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node
        uses: actions/cache@v2
        id: node-cache
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ env.CACHE_VERSION_NODE_MODULES }}-${{ hashFiles('yarn.lock') }}
      - name: Cache Cocoapods
        uses: actions/cache@v2
        id: pods-cache
        with:
          path: example/ios/Pods
          key: ${{ runner.os }}-pods-${{ CACHE_VERSION_PODS }}-${{ hashFiles('example/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - run: yarn --frozen-lockfile
      - run: cd example && yarn --frozen-lockfile
      - run: cd example/ios && pod install
      - uses: yatatsu/pod-outdated-check-action@v0.3.0
        id: outdated
        with:
          project_directory: example/ios
          podspec: payjp-react-native.podspec
          exclude_pods: React,PAYJP
      - name: Create Issue
        if: steps.outdated.outputs.has_any_outdated != 'false'
        run: |
          hub issue create -m "Found outdated dependencies." -m "${{ steps.outdated.outputs.outdated_pod_info }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
